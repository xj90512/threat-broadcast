
<h3>发现最新漏洞情报<font color="red">10</font>条：</h3>
<ul>
    <li><font color="red">10</font>条由 [<a href="https://www.tenable.com/">Tenable (Nessus)</a>] 提供</li>
</ul>
<h3>详细漏洞清单如下：</h3>
<br/>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2025-3305</font><br/>[<b>披露时间</b>] 2025-04-05 22:31:05<br/>[<b>漏洞描述</b>] A vulnerability has been found in 1902756969/code-projects IKUN_Library 1.0 and classified as problematic. This vulnerability affects the function addInterceptors of the file MvcConfig.java of the component Borrow Handler. The manipulation leads to improper access controls. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2025-3305'>https://www.tenable.com/cve/CVE-2025-3305</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2025-3304</font><br/>[<b>披露时间</b>] 2025-04-05 22:00:13<br/>[<b>漏洞描述</b>] A vulnerability, which was classified as critical, was found in code-projects Patient Record Management System 1.0. This affects an unknown part of the file /dental_not.php. The manipulation of the argument itr_no leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2025-3304'>https://www.tenable.com/cve/CVE-2025-3304</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2025-3303</font><br/>[<b>披露时间</b>] 2025-04-05 21:15:40<br/>[<b>漏洞描述</b>] A vulnerability, which was classified as critical, has been found in code-projects Patient Record Management System 1.0. Affected by this issue is some unknown functionality of the file /birthing_record.php. The manipulation of the argument itr_no leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2025-3303'>https://www.tenable.com/cve/CVE-2025-3303</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2025-32360</font><br/>[<b>披露时间</b>] 2025-04-05 21:15:40<br/>[<b>漏洞描述</b>] In Zammad 6.4.x before 6.4.2, there is information exposure. Only agents should be able to see and work on shared article drafts. However, a logged in customer was able to see details about shared drafts for their customer tickets in the browser console, which may contain confidential information, and also to manipulate them via API.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2025-32360'>https://www.tenable.com/cve/CVE-2025-32360</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2025-32359</font><br/>[<b>披露时间</b>] 2025-04-05 21:15:40<br/>[<b>漏洞描述</b>] In Zammad 6.4.x before 6.4.2, there is client-side enforcement of server-side security. When changing their two factor authentication configuration, users need to re-authenticate with their current password first. However, this change was enforced in Zammad only on the front end level, and not when using the API directly.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2025-32359'>https://www.tenable.com/cve/CVE-2025-32359</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2025-32358</font><br/>[<b>披露时间</b>] 2025-04-05 21:15:40<br/>[<b>漏洞描述</b>] In Zammad 6.4.x before 6.4.2, SSRF can occur. Authenticated admin users can enable webhooks in Zammad, which are triggered as POST requests when certain conditions are met. If a webhook endpoint returned a redirect response, Zammad would follow it automatically with another GET request. This could be abused by an attacker to cause GET requests for example in the local network.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2025-32358'>https://www.tenable.com/cve/CVE-2025-32358</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2025-32357</font><br/>[<b>披露时间</b>] 2025-04-05 21:15:39<br/>[<b>漏洞描述</b>] In Zammad 6.4.x before 6.4.2, an authenticated agent with knowledge base permissions was able to use the Zammad API to fetch knowledge base content that they have no permission for.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2025-32357'>https://www.tenable.com/cve/CVE-2025-32357</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-56370</font><br/>[<b>披露时间</b>] 2025-04-05 19:15:38<br/>[<b>漏洞描述</b>] Net::Xero 0.044 and earlier for Perl uses the rand() function as the default source of entropy, which is not cryptographically secure, for cryptographic functions. Specifically Net::Xero uses the Data::Random library which specifically states that it is "Useful mostly for test programs". Data::Random uses the rand() function.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-56370'>https://www.tenable.com/cve/CVE-2024-56370</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-52322</font><br/>[<b>披露时间</b>] 2025-04-05 17:15:39<br/>[<b>漏洞描述</b>] WebService::Xero 0.11 and earlier for Perl uses the rand() function as the default source of entropy, which is not cryptographically secure, for cryptographic functions. Specifically WebService::Xero uses the Data::Random library which specifically states that it is "Useful mostly for test programs". Data::Random uses the rand() function.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-52322'>https://www.tenable.com/cve/CVE-2024-52322</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-58036</font><br/>[<b>披露时间</b>] 2025-04-05 16:15:33<br/>[<b>漏洞描述</b>] Net::Dropbox::API 1.9 and earlier for Perl uses the rand() function as the default source of entropy, which is not cryptographically secure, for cryptographic functions. Specifically Net::Dropbox::API uses the Data::Random library which specifically states that it is "Useful mostly for test programs". Data::Random uses the rand() function.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-58036'>https://www.tenable.com/cve/CVE-2024-58036</a>

<br/><br/>
++++++++++++++++++++++++++++++++++++++++++++++
<br/>
<font color="red">【漏洞情报收集与播报支持】</font>
