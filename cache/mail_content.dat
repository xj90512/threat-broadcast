
<h3>发现最新漏洞情报<font color="red">10</font>条：</h3>
<ul>
    <li><font color="red">10</font>条由 [<a href="https://www.tenable.com/">Tenable (Nessus)</a>] 提供</li>
</ul>
<h3>详细漏洞清单如下：</h3>
<br/>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-37880</font><br/>[<b>披露时间</b>] 2024-06-10 02:15:47<br/>[<b>漏洞描述</b>] The Kyber reference implementation before 9b8d306, when compiled by LLVM Clang through 18.x with some common optimization options, has a timing side channel that allows attackers to recover an ML-KEM 512 secret key in minutes. This occurs because poly_frommsg in poly.c does not prevent Clang from emitting a vulnerable secret-dependent branch.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-37880'>https://www.tenable.com/cve/CVE-2024-37880</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-5389</font><br/>[<b>披露时间</b>] 2024-06-09 23:15:50<br/>[<b>漏洞描述</b>] In lunary-ai/lunary version 1.2.13, an insufficient granularity of access control vulnerability allows users to create, update, get, and delete prompt variations for datasets not owned by their organization. This issue arises due to the application not properly validating the ownership of dataset prompts and their variations against the organization or project of the requesting user. As a result, unauthorized modifications to dataset prompts can occur, leading to altered or removed dataset prompts without proper authorization. This vulnerability impacts the integrity and consistency of dataset information, potentially affecting the results of experiments.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-5389'>https://www.tenable.com/cve/CVE-2024-5389</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-4577</font><br/>[<b>披露时间</b>] 2024-06-09 20:15:09<br/>[<b>漏洞描述</b>] In PHP versions 8.1.* before 8.1.29, 8.2.* before 8.2.20, 8.3.* before 8.3.8, when using Apache and PHP-CGI on Windows, if the system is set up to use certain code pages, Windows may use "Best-Fit" behavior to replace characters in command line given to Win32 API functions. PHP CGI module may misinterpret those characters as PHP options, which may allow a malicious user to pass options to PHP binary being run, and thus reveal the source code of scripts, run arbitrary PHP code on the server, etc.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-4577'>https://www.tenable.com/cve/CVE-2024-4577</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-37570</font><br/>[<b>披露时间</b>] 2024-06-09 20:15:09<br/>[<b>漏洞描述</b>] On Mitel 6869i 4.5.0.41 devices, the Manual Firmware Update (upgrade.html) page does not perform sanitization on the username and path parameters (sent by an authenticated user) before appending flags to the busybox ftpget command. This leads to $() command execution.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-37570'>https://www.tenable.com/cve/CVE-2024-37570</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-37569</font><br/>[<b>披露时间</b>] 2024-06-09 20:15:09<br/>[<b>漏洞描述</b>] An issue was discovered on Mitel 6869i through 4.5.0.41 and 5.x through 5.0.0.1018 devices. A command injection vulnerability exists in the hostname parameter taken in by the provis.html endpoint. The provis.html endpoint performs no sanitization on the hostname parameter (sent by an authenticated user), which is subsequently written to disk. During boot, the hostname parameter is executed as part of a series of shell commands. Attackers can achieve remote code execution in the root context by placing shell metacharacters in the hostname parameter.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-37569'>https://www.tenable.com/cve/CVE-2024-37569</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-2408</font><br/>[<b>披露时间</b>] 2024-06-09 20:15:09<br/>[<b>漏洞描述</b>] The openssl_private_decrypt function in PHP, when using PKCS1 padding (OPENSSL_PKCS1_PADDING, which is the default), is vulnerable to the Marvin Attack unless it is used with an OpenSSL version that includes the changes from this pull request: https://github.com/openssl/openssl/pull/13817 (rsa_pkcs1_implicit_rejection). These changes are part of OpenSSL 3.2 and have also been backported to stable versions of various Linux distributions, as well as to the PHP builds provided for Windows since the previous release. All distributors and builders should ensure that this version is used to prevent PHP from being vulnerable. PHP Windows builds for the versions 8.1.29, 8.2.20 and 8.3.8 and above include OpenSSL patches that fix the vulnerability.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-2408'>https://www.tenable.com/cve/CVE-2024-2408</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-5585</font><br/>[<b>披露时间</b>] 2024-06-09 19:15:52<br/>[<b>漏洞描述</b>] In PHP versions 8.1.* before 8.1.29, 8.2.* before 8.2.20, 8.3.* before 8.3.8, the fix for CVE-2024-1874 does not work if the command name includes trailing spaces. Original issue: when using proc_open() command with array syntax, due to insufficient escaping, if the arguments of the executed command are controlled by a malicious user, the user can supply arguments that would execute arbitrary commands in Windows shell.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-5585'>https://www.tenable.com/cve/CVE-2024-5585</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-5458</font><br/>[<b>披露时间</b>] 2024-06-09 19:15:52<br/>[<b>漏洞描述</b>] In PHP versions 8.1.* before 8.1.29, 8.2.* before 8.2.20, 8.3.* before 8.3.8, due to a code logic error, filtering functions such as filter_var when validating URLs (FILTER_VALIDATE_URL) for certain types of URLs the function will result in invalid user information (username + password part of URLs) being treated as valid user information. This may lead to the downstream code accepting invalid URLs as valid and parsing them incorrectly.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-5458'>https://www.tenable.com/cve/CVE-2024-5458</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-37568</font><br/>[<b>披露时间</b>] 2024-06-09 19:15:52<br/>[<b>漏洞描述</b>] lepture Authlib before 1.3.1 has algorithm confusion with asymmetric public keys. Unless an algorithm is specified in a jwt.decode call, HMAC verification is allowed with any asymmetric public key. (This is similar to CVE-2022-29217 and CVE-2024-33663.)<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-37568'>https://www.tenable.com/cve/CVE-2024-37568</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-35748</font><br/>[<b>披露时间</b>] 2024-06-09 19:15:52<br/>[<b>漏洞描述</b>] Missing Authorization vulnerability in OPMC WooCommerce Dropshipping.This issue affects WooCommerce Dropshipping: from n/a through 5.0.4.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-35748'>https://www.tenable.com/cve/CVE-2024-35748</a>

<br/><br/>
++++++++++++++++++++++++++++++++++++++++++++++
<br/>
<font color="red">【漏洞情报收集与播报支持】</font>
