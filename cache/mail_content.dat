
<h3>发现最新漏洞情报<font color="red">10</font>条：</h3>
<ul>
    <li><font color="red">10</font>条由 [<a href="https://www.tenable.com/">Tenable (Nessus)</a>] 提供</li>
</ul>
<h3>详细漏洞清单如下：</h3>
<br/>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2022-4964</font><br/>[<b>披露时间</b>] 2024-01-24 01:15:07<br/>[<b>漏洞描述</b>] Ubuntu's pipewire-pulse in snap grants microphone access even when the snap interface for audio-record is not set.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2022-4964'>https://www.tenable.com/cve/CVE-2022-4964</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-23638</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Squid is a caching proxy for the Web. Due to an expired pointer reference bug, Squid prior to version 6.6 is vulnerable to a Denial of Service attack against Cache Manager error responses. This problem allows a trusted client to perform Denial of Service when generating error pages for Client Manager reports. Squid older than 5.0.5 have not been tested and should be assumed to be vulnerable. All Squid-5.x up to and including 5.9 are vulnerable. All Squid-6.x up to and including 6.5 are vulnerable. This bug is fixed by Squid version 6.6. In addition, patches addressing this problem for the stable releases can be found in Squid's patch archives. As a workaround, prevent access to Cache Manager using Squid's main access control: `http_access deny manager`.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-23638'>https://www.tenable.com/cve/CVE-2024-23638</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-23633</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Label Studio, an open source data labeling tool had a remote import feature allowed users to import data from a remote web source, that was downloaded and could be viewed on the website. Prior to version 1.10.1, this feature could had been abused to download a HTML file that executed malicious JavaScript code in the context of the Label Studio website. Executing arbitrary JavaScript could result in an attacker performing malicious actions on Label Studio users if they visit the crafted avatar image. For an example, an attacker can craft a JavaScript payload that adds a new Django Super Administrator user if a Django administrator visits the image. `data_import/uploader.py` lines 125C5 through 146 showed that if a URL passed the server side request forgery verification checks, the contents of the file would be downloaded using the filename in the URL. The downloaded file path could then be retrieved by sending a request to `/api/projects/{project_id}/file-uploads?ids=[{download_id}]` where `{project_id}` was the ID of the project and `{download_id}` was the ID of the downloaded file. Once the downloaded file path was retrieved by the previous API endpoint, `data_import/api.py`lines 595C1 through 616C62 demonstrated that the `Content-Type` of the response was determined by the file extension, since `mimetypes.guess_type` guesses the `Content-Type` based on the file extension. Since the `Content-Type` was determined by the file extension of the downloaded file, an attacker could import in a `.html` file that would execute JavaScript when visited. Version 1.10.1 contains a patch for this issue. Other remediation strategies are also available. For all user provided files that are downloaded by Label Studio, set the `Content-Security-Policy: sandbox;` response header when viewed on the site. The `sandbox` directive restricts a page's actions to prevent popups, execution of plugins and scripts and enforces a `same-origin` policy. Alternatively, restrict the allowed file extensions that may be downloaded.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-23633'>https://www.tenable.com/cve/CVE-2024-23633</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-23453</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Android Spoon application version 7.11.1 to 8.6.0 uses hard-coded credentials, which may allow a local attacker to retrieve the hard-coded API key when the application binary is reverse-engineered. This API key may be used for unexpected access of the associated service.<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-23453'>https://www.tenable.com/cve/CVE-2024-23453</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-0814</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Incorrect security UI in Payments in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to potentially spoof security UI via a crafted HTML page. (Chromium security severity: Medium)<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-0814'>https://www.tenable.com/cve/CVE-2024-0814</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-0813</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Use after free in Reading Mode in Google Chrome prior to 121.0.6167.85 allowed an attacker who convinced a user to install a malicious extension to potentially exploit heap corruption via specific UI interaction. (Chromium security severity: Medium)<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-0813'>https://www.tenable.com/cve/CVE-2024-0813</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-0812</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Inappropriate implementation in Accessibility in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to potentially exploit object corruption via a crafted HTML page. (Chromium security severity: High)<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-0812'>https://www.tenable.com/cve/CVE-2024-0812</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-0811</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Inappropriate implementation in Extensions API in Google Chrome prior to 121.0.6167.85 allowed an attacker who convinced a user to install a malicious extension to leak cross-origin data via a crafted Chrome Extension. (Chromium security severity: Low)<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-0811'>https://www.tenable.com/cve/CVE-2024-0811</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-0810</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Insufficient policy enforcement in DevTools in Google Chrome prior to 121.0.6167.85 allowed an attacker who convinced a user to install a malicious extension to leak cross-origin data via a crafted Chrome Extension. (Chromium security severity: Medium)<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-0810'>https://www.tenable.com/cve/CVE-2024-0810</a>
<br/>==============================================<br/>[<b>漏洞来源</b>] Tenable (Nessus)<br/>[<b>漏洞编号</b>] <font color='blue'>CVE-2024-0809</font><br/>[<b>披露时间</b>] 2024-01-24 00:15:08<br/>[<b>漏洞描述</b>] Inappropriate implementation in Autofill in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to bypass Autofill restrictions via a crafted HTML page. (Chromium security severity: Low)<br/>[<b>相关链接</b>] <a href='https://www.tenable.com/cve/CVE-2024-0809'>https://www.tenable.com/cve/CVE-2024-0809</a>

<br/><br/>
++++++++++++++++++++++++++++++++++++++++++++++
<br/>
<font color="red">【漏洞情报收集与播报支持】</font>
